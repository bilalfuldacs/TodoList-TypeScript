{"ast":null,"code":"var _jsxFileName = \"/Users/bilalahmad/Downloads/07-react-ts-starting-project/src/components/Todos.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// this todo now act as data type also not only as class but a data type also\n//noww i put items:todo to tell items is array of object which should have id and text\nconst Todos = props => {\n  //react.fc make it generic type whatever we paass props becoes like that\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","Todos","props","items","map","item"],"sources":["/Users/bilalahmad/Downloads/07-react-ts-starting-project/src/components/Todos.tsx"],"sourcesContent":["import React, { Children } from \"react\";\nimport Todo from \"../models/todo\";// this todo now act as data type also not only as class but a data type also\n//noww i put items:todo to tell items is array of object which should have id and text\nconst Todos:React.FC<{items:Todo[]}> =(props) =>{//react.fc make it generic type whatever we paass props becoes like that\n  return (\n    <ul>\n      {props.items.map(item =><li>{item}</li>)}\n    </ul>\n  );\n}\n\nexport default Todos;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;;;AACkC;AAClC;AACA,MAAMC,KAA8B,GAAGC,KAAD,IAAU;EAAC;EAC/C,oBACE;IAAA,UACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBAAG;MAAA,UAAKA;IAAL;MAAA;MAAA;MAAA;IAAA,QAAvB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAND;;KAAMJ,K;AAQN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}