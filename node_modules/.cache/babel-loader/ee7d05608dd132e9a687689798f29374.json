{"ast":null,"code":"var _jsxFileName = \"/Users/bilalahmad/Downloads/07-react-ts-starting-project/src/components/NewTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Classes from './NewTodo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTodo = props => {\n  _s();\n\n  // State to manage the user's input\n  const [userText, setUserText] = useState('');\n  const inputRef = useRef(null); // Function to handle form submission\n\n  const handleSubmit = event => {\n    var _inputRef$current;\n\n    event.preventDefault(); // Access the textarea value using the ref\n\n    const inputValue = ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.value) || '';\n\n    if (inputValue.trim().length === 0) {\n      return;\n    } // Do whatever you need with the input value\n\n\n    console.log('User text submitted:', inputValue);\n    props.onAddTodo(inputValue); // Optionally, you can clear the input\n\n    setUserText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: Classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"userText\",\n      children: \"Your Text:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"userText\",\n      name: \"userText\",\n      ref: inputRef,\n      placeholder: \"Type your text here...\",\n      value: userText,\n      onChange: e => setUserText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTodo, \"TI4RbbJj86mHIfNmc1K4v6X5AiM=\");\n\n_c = NewTodo;\nexport default NewTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTodo\");","map":{"version":3,"names":["React","useRef","useState","Classes","NewTodo","props","userText","setUserText","inputRef","handleSubmit","event","preventDefault","inputValue","current","value","trim","length","console","log","onAddTodo","form","e","target"],"sources":["/Users/bilalahmad/Downloads/07-react-ts-starting-project/src/components/NewTodo.tsx"],"sourcesContent":["import React, { useRef, useState, FormEvent } from 'react';\nimport Classes from './NewTodo.module.css'\nconst NewTodo: React.FC<{onAddTodo:(inputext:string)=>void}>=(props)=> {\n  // State to manage the user's input\n  const [userText, setUserText] = useState('');\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n\n  // Function to handle form submission\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    // Access the textarea value using the ref\n    const inputValue = inputRef.current?.value || '';\n\n    if(inputValue.trim().length===0){\n        return;\n    }\n    // Do whatever you need with the input value\n    console.log('User text submitted:', inputValue);\nprops.onAddTodo(inputValue);\n    // Optionally, you can clear the input\n    setUserText('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}className={Classes.form}>\n      <label htmlFor=\"userText\">Your Text:</label>\n      <input \n      type='text'\n        id=\"userText\"\n        name=\"userText\"\n        ref={inputRef}\n        placeholder=\"Type your text here...\"\n        value={userText}\n        onChange={(e) => setUserText(e.target.value)}\n      ></input>\n\n      <br />\n\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport default NewTodo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,MAAMC,OAAsD,GAAEC,KAAD,IAAU;EAAA;;EACrE;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMM,QAAQ,GAAGP,MAAM,CAAsB,IAAtB,CAAvB,CAHqE,CAKrE;;EACA,MAAMQ,YAAY,GAAIC,KAAD,IAAsB;IAAA;;IACzCA,KAAK,CAACC,cAAN,GADyC,CAEzC;;IACA,MAAMC,UAAU,GAAG,sBAAAJ,QAAQ,CAACK,OAAT,wEAAkBC,KAAlB,KAA2B,EAA9C;;IAEA,IAAGF,UAAU,CAACG,IAAX,GAAkBC,MAAlB,KAA2B,CAA9B,EAAgC;MAC5B;IACH,CAPwC,CAQzC;;;IACAC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,UAApC;IACJP,KAAK,CAACc,SAAN,CAAgBP,UAAhB,EAV6C,CAWzC;;IACAL,WAAW,CAAC,EAAD,CAAX;EACD,CAbD;;EAeA,oBACE;IAAM,QAAQ,EAAEE,YAAhB;IAA6B,SAAS,EAAEN,OAAO,CAACiB,IAAhD;IAAA,wBACE;MAAO,OAAO,EAAC,UAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACA,IAAI,EAAC,MADL;MAEE,EAAE,EAAC,UAFL;MAGE,IAAI,EAAC,UAHP;MAIE,GAAG,EAAEZ,QAJP;MAKE,WAAW,EAAC,wBALd;MAME,KAAK,EAAEF,QANT;MAOE,QAAQ,EAAGe,CAAD,IAAOd,WAAW,CAACc,CAAC,CAACC,MAAF,CAASR,KAAV;IAP9B;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAA;MAAA;MAAA;IAAA,QAZF,eAcE;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAC;IAA3B;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAvCD;;GAAMV,O;;KAAAA,O;AAyCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}